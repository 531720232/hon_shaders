// (C)2013 S2 Games
// effect_fire_beam.psh
// 
// An animated shader designed to simulate flames on a beam emitter
//=============================================================================

//=============================================================================
// Global variables
//=============================================================================
float fBorderSharpness;

//=============================================================================
// Vertex shader output structure
//=============================================================================
struct VS_OUTPUT
{
	float4 Color0 : COLOR0;
	float3 Texcoord0 : TEXCOORD0;
	float2 Texcoord1 : TEXCOORD1;
};

//=============================================================================
// Pixel shader input structure
//=============================================================================
struct PS_OUTPUT
{
	float4 Color : COLOR;
};

sampler	reveal;

//=============================================================================
// Pixel Shader
//=============================================================================
PS_OUTPUT PS( VS_OUTPUT In )
{
	PS_OUTPUT Out;
	
	float4 cRevealColor = tex2D(reveal, In.Texcoord0.yx);
	
	// Soften the left and right edges of the particle
	float fRevealSoftness = saturate(10.0f * (0.5f - abs(In.Texcoord1.x - 0.5f)));
	
	float fReveal = cRevealColor.a * fRevealSoftness;
	
	float4 cDiffuseColor = tex2D(reveal, 1.0f - float2(0.0f, fReveal));
	
	Out.Color.rgb = cDiffuseColor.rgb * In.Color0.rgb;
	Out.Color.a = In.Color0.a * saturate(fReveal * fBorderSharpness);
	
	return Out;
}
