// (C)2011 S2 Games
// mesh_color_enviro_unit_team_spec_reflectmask.psh
// 
// Default mesh pixel shader
//=============================================================================

//=============================================================================
// Headers
//=============================================================================
#include "../common/common.h"

//=============================================================================
// Global variables
//=============================================================================
float3		vSunPositionWorld;

float3		vAmbient;
float3		vSunColor;

float3		vTeamColor;

float2		vSpec;

float		fReflect;
float3		vReflectColor;
float3 		vReflectFresnel; // Bias, Scale, Power

//=============================================================================
// Vertex shader output structure
//=============================================================================
struct VS_OUTPUT
{
	float4 Color0 : COLOR0;
	float2 Texcoord0 : TEXCOORDX;
		#include "../common/inc_texcoord.h"
	float3 Reflect : TEXCOORDX;
		#include "../common/inc_texcoord.h"
	float3 DiffLight : TEXCOORDX;
		#include "../common/inc_texcoord.h"
};

//=============================================================================
// Pixel shader input structure
//=============================================================================
struct PS_OUTPUT
{
	float4 Color : COLOR;
};

sampler diffuse;

#ifndef RXGB_NORMALMAP
sampler normalmap;
#else
sampler normalmap_0;
#endif

samplerCUBE cube;
sampler specular;
sampler team;

//=============================================================================
// Pixel Shader
//=============================================================================
PS_OUTPUT PS( VS_OUTPUT In )
{
	PS_OUTPUT Out;
	
	float4 cDiffuseColor = tex2D(diffuse, In.Texcoord0);
	

	float fTeamMask = tex2D(team, In.Texcoord0).a;

	cDiffuseColor.rgb *= lerp(In.Color0.rgb, float3(1.0f, 1.0f, 1.0f), fTeamMask);
	cDiffuseColor.a *= In.Color0.a;
	
	cDiffuseColor.rgb *= lerp(float3(1.0f, 1.0f, 1.0f), vTeamColor, fTeamMask);
		
	//
	// Lighting
	//	
	

	#ifndef RXGB_NORMALMAP
	float3 cNormalmapColor = tex2D(normalmap, In.Texcoord0).rgb;
	#else
	float3 cNormalmapColor = tex2D(normalmap_0, In.Texcoord0).agb;
	#endif
	
	float3 vTexNormal = float3(cNormalmapColor.rgb * 2.0f - 1.0f);
	
	float3 vDiffuse = vAmbient;
	float3 vSpecular = float3(0.0f, 0.0f, 0.0f);
	float fSpecular = vSpec.x;
	
	
	// Sun
	

	vDiffuse += In.DiffLight.xyz;

	float3 cReflectionColor = texCUBE(cube, In.Reflect);

	cReflectionColor *= vReflectColor * In.Color0;

	float fFresnel = 0.0f;
	float4 vSpecColor = 0.0f;
	vSpecColor.a = 1.0f;


	//
	// Final
	//
	
	float3 vFinalColor = lerp(cDiffuseColor.rgb * vDiffuse + vSpecular, cReflectionColor, vSpecColor.a * fReflect * fFresnel);

	Out.Color.rgb = vFinalColor;
	Out.Color.a = cDiffuseColor.a;

	return Out;
}
